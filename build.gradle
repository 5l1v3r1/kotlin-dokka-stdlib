
configurations {
  dokka
}

final String dokka_build = "611"
final String dokka_version = "0.9.18.$dokka_build"

repositories {
  maven { url = "https://teamcity.jetbrains.com/guestAuth/repository/download/Kotlin_Dokka_DokkaAntMavenGradle/$dokka_build/maven"  }
}

dependencies {
  dokka "org.jetbrains.dokka:dokka-fatjar:$dokka_version"
}

final File dokkaHome = new File(buildDir, "dokka-home")
task setupDokka(type: Sync) {
  from configurations.dokka
  into dokkaHome
}


repositories {
  mavenCentral()
  jcenter()
}



configurations {
  kotlin_src
  kotlin_jvm
}

final String kotlin_big_build_configuration = 'Kotlin_13M2_CompilerAllPlugins'
final String kotlin_big_version = '1.3-M2'
final String kotlin_big_build = "$kotlin_big_version-release-219"

repositories {
  maven { url = "https://teamcity.jetbrains.com/guestAuth/repository/download/$kotlin_big_build_configuration/$kotlin_big_build/maven" }
}

final List<String> modules = [
        "kotlin-stdlib",
        "kotlin-stdlib-common",
        "kotlin-stdlib-jdk7",
        "kotlin-stdlib-jdk8",
        "kotlin-stdlib-js",
        "kotlin-test",
]

task extractSources() { }

modules.forEach { module ->
  final String src = "kotlin_src_$module"
  final String jvm = "kotlin_jvm_$module"

  final Configuration conf_src = configurations.create(src)
  configurations.create(jvm)
  
  dependencies {
    "$src"(group: 'org.jetbrains.kotlin', name: module, version: kotlin_big_version, classifier: 'sources') { transitive = false }
    "$jvm"(group: 'org.jetbrains.kotlin', name: module, version: kotlin_big_version)
  }
  
  final Task task = tasks.create("extract_$module", Sync) {
    dependsOn conf_src
    
    from { conf_src.collect { zipTree(it) } }
    into "$buildDir/sources/$module"
  }
  
  extractSources.dependsOn task
}

