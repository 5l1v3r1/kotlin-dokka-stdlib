plugins {
  id "de.undercouch.download" version "3.4.3"
}


configurations {
  dokka
}

final String dokka_build = "611"
final String dokka_version = "0.9.18-SNAPSHOT"

repositories {
  mavenLocal()
  maven { url = "https://teamcity.jetbrains.com/guestAuth/repository/download/Kotlin_Dokka_DokkaAntMavenGradle/$dokka_build/maven"  }
}

dependencies {
  dokka "org.jetbrains.dokka:dokka-fatjar:$dokka_version"
}

final File dokkaHome = new File(buildDir, "dokka-home")
task setupDokka(type: Sync) {
  from configurations.dokka
  into dokkaHome
}


repositories {
  mavenCentral()
  jcenter()
}



configurations {
  kotlin_src
  kotlin_jvm
}

final String kotlin_big_build_configuration = 'Kotlin_dev_CompilerAllPlugins'
final String kotlin_big_version = '1.3.0-dev-498'
final String kotlin_big_build = "$kotlin_big_version"

repositories {
  maven { url = "https://teamcity.jetbrains.com/guestAuth/repository/download/$kotlin_big_build_configuration/$kotlin_big_build/maven" }
}

final List<String> modules = [
        "kotlin-stdlib",
        "kotlin-stdlib-common",
        "kotlin-stdlib-jdk7",
        "kotlin-stdlib-jdk8",
        "kotlin-stdlib-js",
        "kotlin-test",
]


task extractSources() { }
task extractLibs() { }

task extractAll(dependsOn: [setupDokka, extractSources, extractLibs])

modules.forEach { module ->
  final String src = "kotlin_src_$module"
  final String lib = "kotlin_lib_$module"

  final Configuration conf_src = configurations.create(src)
  final Configuration  lib_src = configurations.create(lib)

  dependencies {
    "$src"(group: 'org.jetbrains.kotlin', name: module, version: kotlin_big_version, classifier: 'sources') { transitive = false }
    "$lib"(group: 'org.jetbrains.kotlin', name: module, version: kotlin_big_version)
  }

  final Task sourcesTask = tasks.create("extract_source_$module", Sync) {
    dependsOn conf_src

    from { conf_src.collect { zipTree(it) } }
    into "$buildDir/sources/$module"
  }

  final Task libsTask = tasks.create("extract_lib_$module", Sync) {
    dependsOn lib_src

    from { lib_src }
    into "$buildDir/libs/$module"
  }

  extractSources.dependsOn sourcesTask
  extractLibs.dependsOn libsTask
}


final String ext
if (System.getProperty('os.name', '').toLowerCase().contains('windows')) {
  ext = ".cmd"
} else {
  ext = ""
}


final String antVersion = "1.10.5"
final String antURL = "https://www.apache.org/dist/ant/binaries/apache-ant-$antVersion-bin.zip"
final File antHome = new File(buildDir, "ant-home")
final File antZip = new File(buildDir, "apache-ant-$antVersion-bin.zip")
final File antExe = new File(antHome, "apache-ant-$antVersion/bin/ant$ext") 

task downloadAnt(type: Download) {
  src antURL
  dest buildDir
  onlyIfModified true
}

task extractAnt(type: Sync, dependsOn: downloadAnt) {
  from zipTree(antZip)
  into antHome
}

extractAll.dependsOn extractAnt



task callDokka(type: Exec, dependsOn: extractAll) {
  workingDir = projectDir
  environment("ANT_OPTS", "-Xmx3G")
  environment("JAVA_HOME", System.getProperty("java.home"))
  commandLine antExe.path, "-f", file("build-docs.xml").path, "v2"
}

